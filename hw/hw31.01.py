# 1) '''Напишите функцию, принимающую на вход длины двух катетов прямо-
# угольного треугольника и возвращающую длину гипотенузы, рассчитан-
# ную по теореме Пифагора. В главной программе должен осуществляться
# запрос длин сторон у пользователя, вызов функции и вывод на экран
# полученного результата.'''

# def calculate_hypotenuse(cathetus1, cathetus2):
#     """Функция для расчета длины гипотенузы по теореме Пифагора."""
#     hypotenuse = (cathetus1**2 + cathetus2**2)**0.5
#     return print(round(hypotenuse, 2))

# cathetus1 = float(input("Введите длину первого катета: ") or 12)
# cathetus2 = float(input("Введите длину второго катета: ") or 12)
# calculate_hypotenuse(cathetus1, cathetus2)



# 2) '''Представьте, что сумма за пользование услугами такси складывается из
# базового тарифа в размере $4,00 плюс $0,25 за каждые 140 м поездки.
# Напишите функцию, принимающую в качестве единственного параметра
# расстояние поездки в километрах и возвращающую итоговую сумму опла-
# ты такси. В основной программе должен демонстрироваться результат
# вызова функции.'''

# def calculate_taxi_fare(distance_km):
#     return (((distance_km  * 1000 )/ 140) * 0.25) + 4.00
    
# calculus = calculate_taxi_fare(14)
# print(f'итоговая сумма оплаты: ${calculus:.2f}')



# 3) '''Интернет-магазин предоставляет услугу экспресс-доставки для части
# своих товаров по цене $10,95 за первый товар в заказе и $2,95 – за все
# последующие. Напишите функцию, принимающую в качестве единствен-
# ного параметра количество товаров в заказе и возвращающую общую
# сумму доставки. В основной программе должны производиться запрос
# количест­ва позиций в заказе у пользователя и отображаться на экране
# сумма доставки.'''

# def detail(shit_count):
#     pay_sum = 0
#     if shit_count > 1:
#         return pay_sum + 10.25 + 2.95 * (shit_count -1)
#     else:
#         return 10.25
    
# res = detail(4)
# print(res)



# 4) '''Напишите функцию, которая будет принимать на вход три числа в качест­
# ве параметров и возвращать их медиану. В основной программе должен
# производиться запрос к пользователю на предмет ввода трех чисел, а так-
# же вызов функции и отображение результата.'''
# def median(a,b,c):
#     sorted = [a,b,c]
#     sorted.sort()
#     return sorted[1]

# print(median(4,1,8))


# 5) '''Используя решения из упражнений 100 и 102, напишите программу, ге-
# нерирующую случайный надежный пароль и выводящую его на экран.
# Посчитайте, с какого раза удастся создать пароль, отвечающий нашим
# требованиям надежности, и выведите на экран количество попыток. Им-
# портируйте функции из предыдущих упражнений и вызывайте их при
# необходимости для решения этой задачи.'''
# import random


# def security_check(password):
#     if any(char.isdigit() for char in password) and any(char.isalpha() for char in password) and any(char in '!@#$%' for char in password):
#         return True
#     else:
#         return False
    
# def password_generation():
#     pass_elements = 'qwertyuiASDFGHJK1234567!@#$%'
#     password = ''.join(random.choice(pass_elements) for _ in range(10))
#     return password

# counter = 0
# while True:
#     counter += 1
#     generated_password = password_generation()
#     if security_check(generated_password):
#         print(f"Generated password: {generated_password}")
#         print(f"Number of attempts: {counter}")
#         break